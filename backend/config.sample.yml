app_name: matrix-cerberus

redis:
  # Used to construct redis database URL
  # 'uri' is in the form "redis :// [[username :] password@] host [:port][/database] [?[timeout=timeout[d|h|m|s|ms|us|ns]]"
  # replace 'uri' with "redis://redis_service/" when runnning with docker.
  #
  uri: redis://127.0.0.1:6379/

server_sessions:
  # Server side sessions to authenticate logged in users
  # 'expires_key' is to be set in seconds
  #
  session_key: sessionID
  expires_in: 3600

matrix_bot:
  # Details of the user account which will be acting as the bot for the application.
  # 'homeserver' is set to the server where the bot account belongs/created.
  # 'min_power_level' corresponds to the minimum power level required for a room member to access the room permissions for a particular room.
  #
  homeserver: "https://example.org"
  access_token: some_access_token
  min_power_level: 50
  bg_validation_cooldown: 300

github:
  # GitHub OAuth App credentials
  # 'organisation_membership' can be set to 'admin' or 'member'.
  # A room admin can change conditions for an organisation only if they satisfy this membership.
  # It is recommended to keep it 'admin' for the current version due to reasons mentioned here https://github.com/MatrixDoctors/matrix-cerberus/issues/52.
  #
  client_id: client_id_token
  client_secret: client_secret_token
  redirect_uri: http://localhost:80/oauth2/github
  organisation_membership: "admin"

patreon:
  # Patreon OAuth App credentials
  client_id: client_id_token
  client_secret: client_secret
  redirect_uri: http://localhost:80/oauth2/patreon

logging:
  # Basic Loguru configuration
  # set 'use_stdout' to true if the logging needs to be done in console.
  #
  path: "./logs"  # Make sure the directory path matches the volume mapped under backend in the docker-compose file.
  filename: "out.log"
  rotation: 20 days
  retention: 1 months
  use_stdout: true
